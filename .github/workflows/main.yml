name: CI pipeline

on: [push]

jobs:
  style_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: make install_ci
      - name: Format using Black, MyPy, iSort
        run: make format
      - name: Lint with pylint
        run: make lint

  sonarqube:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch_depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: make install_ci
      - name: Unit testing
        run: make test
      - uses: hm-actions/run-sonarqube-scan@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  ASIT:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3
      - name: Run advanced-security-issue-tracker
        uses: hm-actions/advanced-security-issue-tracker@v1
        with:
          webhook: ${{secrets.WEBHOOK_URI}}
          token: ${{secrets.PERSONAL_ACCESS_TOKEN}}